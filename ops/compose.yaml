version: "3.8"
services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: app
      POSTGRES_DB: app
      TZ: Europe/Moscow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app" ]
      interval: 5s
      timeout: 3s
      retries: 10
  telegram-bot:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        CMD_PATH: ./cmd/telegram-bot
    environment:
      SERVICE: telegram-bot
      TELEGRAM_API: https://api.telegram.org/bot
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      POSTGRES_DSN: postgres://app:example@postgres:5432/app?sslmode=disable
      TELEGRAM_CHANNEL_ID: ${TELEGRAM_CHANNEL_ID}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
  parser:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        CMD_PATH: ./cmd/processor
    environment:
      SERVICE: parser
      POSTGRES_DSN: postgres://app:example@postgres:5432/app?sslmode=disable
      TELEGRAM_API: https://api.telegram.org/bot
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_CHANNEL_ID: ${TELEGRAM_CHANNEL_ID}
      ACCESS_TOKEN: ${ACCESS_TOKEN}
      AUTHOR_NAME: ${AUTHOR_NAME}
      AUTHOR_URL: ${AUTHOR_URL}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
  # ingest removed (merged into processor)
  # scheduler service removed; bot will check due posts

volumes:
  pgdata:
